{{- /*
The s3Secret variable is going to be parsed by ESO and not by Argo, hence the whole printf and escaping
So first Argo will render the template, then ESO will parse the functions inside the curly brackets
and resolve variables and functions.
*/}}
{{- $s3Secret := printf "{{ cat `s3.accessKey:` .awsAccessKeyId `\\ns3.secretKey:` .awsSecretAccessKey }}" }}
{{- range .Values.s3secret.namespaces }}
---
apiVersion: "external-secrets.io/v1beta1"
kind: ExternalSecret
metadata:
  name: s3-secret
  namespace: {{ . }}
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: {{ $.Values.secretStore.name }}
    kind: {{ $.Values.secretStore.kind }}
  target:
    name: s3-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        "application.properties": "{{ $s3Secret }}"
        "s3Secret": "{{ $s3Secret }}"
  data:
    - secretKey: "awsAccessKeyId"
      remoteRef:
        key: {{ $.Values.s3secret.key }}
        property: aws_access_key_id
    - secretKey: "awsSecretAccessKey"
      remoteRef:
        key: {{ $.Values.s3secret.key }}
        property: aws_secret_access_key
{{- end }}
