name: Deploy edge anomaly detection onto OpenShift

on:
  workflow_dispatch:
    inputs:
      hostname:
        description: 'hostname'
        required: true
        default: hostname
      inventory:
        description: 'inventory for ansible deployment'
        required: true
        default: bastion
      deployment_type:
        description: 'Deployment Type'
        required: true
        default: 'TRAIN'
        type: choice
        options:
            - TRAIN
            - SHIP

env:
    CICD_PIPELINE: true
    DEPLOYMENT_TYPE: ${{ inputs.deployment_type }}

jobs:
  setup-bastion:
    needs: configure-kcli-profiles
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Deploying  ${{ inputs.deployment_type }} onto openshift
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ inputs.hostname }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          command_timeout: 30m
          script: | 
            sudo yum install -y git
            if [ -d "/opt/edge-anomaly-detection" ]; then
              cd /opt/edge-anomaly-detection
              git config pull.rebase false
              git pull
            else
              cd /opt/
              git clone https://github.com/tosin2013/edge-anomaly-detection.git
            fi
            export CICD_PIPELINE=${{ env.CICD_PIPELINE }}
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_REGION=${{ secrets.AWS_REGION }}
            export SSH_PASSWORD=${{ secrets.SSH_PASSWORD }}
            export DEPLOYMENT_TYPE=${{ inputs.DEPLOYMENT_TYPE }}
            export INVENTORY=${{ inputs.INVENTORY }}
            export OPENSHIFT_URL=${{ secrets.OPENSHIFT_URL }}
            export OPENSHIFT_TOKEN=${{ secrets.OPENSHIFT_TOKEN }}
            /opt/edge-anomaly-detection/hack/setup-bastion.sh
